
stages:
  - build
  - deploy

alpine 3.6:
  stage: build
  image: gorialis/discord.py:3.6-alpine-master
  before_script:
    - pip install -U $(find requirements -name *.txt -print | sed -e 's/^/-r /' | tr '\n' ' ')
  script:
    - PYTHONPATH="$(pwd)" pytest -vs --cov=jishaku --cov-report term-missing:skip-covered
    - flake8 .
    - pylint -j "$(nproc)" jishaku
    - isort . --check-only --recursive
    - python ./setup.py sdist bdist_egg bdist_wheel
    - rm -rf jishaku
    - find dist -name *.whl -exec pip install '{}' +
    - pytest -vs
    - cd docs && make html
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

stretch 3.6:
  stage: build
  image: gorialis/discord.py:3.6-stretch-master
  before_script:
    - pip install -U $(find requirements -name *.txt -print | sed -e 's/^/-r /' | tr '\n' ' ')
  script:
    - PYTHONPATH="$(pwd)" pytest -vs --cov=jishaku --cov-report term-missing:skip-covered
    - flake8 .
    - pylint -j "$(nproc)" jishaku
    - isort . --check-only --recursive
    - python ./setup.py sdist bdist_egg bdist_wheel
    - rm -rf jishaku
    - find dist -name *.whl -exec pip install '{}' +
    - pytest -vs
    - cd docs && make html
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

alpine 3.7:
  stage: build
  image: gorialis/discord.py:3.7-alpine-master
  before_script:
    - pip install -U $(find requirements -name *.txt -print | sed -e 's/^/-r /' | tr '\n' ' ')
  script:
    - PYTHONPATH="$(pwd)" pytest -vs --cov=jishaku --cov-report term-missing:skip-covered
    - flake8 .
    - pylint -j "$(nproc)" jishaku
    - isort . --check-only --recursive
    - python ./setup.py sdist bdist_egg bdist_wheel
    - rm -rf jishaku
    - find dist -name *.whl -exec pip install '{}' +
    - pytest -vs
    - cd docs && make html
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

stretch 3.7:
  stage: build
  image: gorialis/discord.py:3.7-stretch-master
  before_script:
    - pip install -U $(find requirements -name *.txt -print | sed -e 's/^/-r /' | tr '\n' ' ')
  script:
    - PYTHONPATH="$(pwd)" pytest -vs --cov=jishaku --cov-report term-missing:skip-covered
    - flake8 .
    - pylint -j "$(nproc)" jishaku
    - isort . --check-only --recursive
    - python ./setup.py sdist bdist_egg bdist_wheel
    - rm -rf jishaku
    - find dist -name *.whl -exec pip install '{}' +
    - pytest -vs
    - cd docs && make html
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

alpine 3.8:
  stage: build
  image: gorialis/discord.py:3.8-alpine-master
  before_script:
    - pip install -U $(find requirements -name *.txt -print | sed -e 's/^/-r /' | tr '\n' ' ')
  script:
    - PYTHONPATH="$(pwd)" pytest -vs --cov=jishaku --cov-report term-missing:skip-covered
    - flake8 .
    - pylint -j "$(nproc)" jishaku
    - isort . --check-only --recursive
    - python ./setup.py sdist bdist_egg bdist_wheel
    - rm -rf jishaku
    - find dist -name *.whl -exec pip install '{}' +
    - pytest -vs
    - cd docs && make html
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

stretch 3.8:
  stage: build
  image: gorialis/discord.py:3.8-stretch-master
  before_script:
    - pip install -U $(find requirements -name *.txt -print | sed -e 's/^/-r /' | tr '\n' ' ')
  script:
    - PYTHONPATH="$(pwd)" pytest -vs --cov=jishaku --cov-report term-missing:skip-covered
    - flake8 .
    - pylint -j "$(nproc)" jishaku
    - isort . --check-only --recursive
    - python ./setup.py sdist bdist_egg bdist_wheel
    - rm -rf jishaku
    - find dist -name *.whl -exec pip install '{}' +
    - pytest -vs
    - cd docs && make html
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

pages:
  stage: deploy
  image: alpine:latest
  script:
    - mv docs/_build/html public
  artifacts:
    paths:
      - public
  only:
    - master

deploy:
  stage: deploy
  image: gorialis/discord.py:3.8-alpine-master
  before_script:
    - pip install -U twine
    - ls dist
    - export TWINE_USERNAME="$(echo -e $TWINE_USERNAME)"
    - export TWINE_PASSWORD="$(echo -e $TWINE_PASSWORD)"
  script:
    - twine upload dist/*
  artifacts:
    paths:
      - dist
  only:
    - tags@Gorialis/jishaku
